{"ast":null,"code":"import Stripe from \"stripe\"; // import { idText } from \"typescript\";\n\nconst stripe = new Stripe(\"sk_test_51HGDkmHBrl2UaEgapNVQtZvVU1BTJGs8MA9jKZ8w8Lh0LHs3S1Hs3Sz6heF6AWtiVZESo13DliaVYiXe0k2oRxZm00JfFHS1nq\");\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      const {\n        id,\n        amount\n      } = req.body;\n      const paymentIntent = await stripe.paymentIntents.create({\n        amount,\n        currency: \"usd\",\n        description: \"Arepa Lover Stickers\",\n        payment_method: id,\n        metadata: {\n          integration_check: 'accept_a_payment'\n        }\n      });\n      res.status(200).send(paymentIntent.client_secret);\n    } catch (err) {\n      res.status(500).json({\n        statusCode: 500,\n        message: err.message\n      });\n    }\n  } else {\n    res.setHeader(\"Allow\", \"POST\");\n    res.status(405).end(\"Method Not Allowed\");\n  }\n});","map":{"version":3,"sources":["/Users/christianorta/MyApps/arepa-store/pages/api/paymentintent.js"],"names":["Stripe","stripe","req","res","method","id","amount","body","paymentIntent","paymentIntents","create","currency","description","payment_method","metadata","integration_check","status","send","client_secret","err","json","statusCode","message","setHeader","end"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB,C,CACA;;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,6GAAX,CAAf;AAEA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACvB,QAAI;AACA,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA;AAAN,UAAiBJ,GAAG,CAACK,IAA3B;AAEA,YAAMC,aAAa,GAAG,MAAMP,MAAM,CAACQ,cAAP,CAAsBC,MAAtB,CAA6B;AACrDJ,QAAAA,MADqD;AAErDK,QAAAA,QAAQ,EAAE,KAF2C;AAGrDC,QAAAA,WAAW,EAAE,sBAHwC;AAIrDC,QAAAA,cAAc,EAAER,EAJqC;AAKrDS,QAAAA,QAAQ,EAAE;AAACC,UAAAA,iBAAiB,EAAE;AAApB;AAL2C,OAA7B,CAA5B;AAOAZ,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,aAAa,CAACU,aAAnC;AACH,KAXD,CAYA,OAAOC,GAAP,EAAY;AACRhB,MAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEC,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,OAAO,EAAEH,GAAG,CAACG;AAAhC,OAArB;AACH;AACJ,GAhBD,MAiBK;AACDnB,IAAAA,GAAG,CAACoB,SAAJ,CAAc,OAAd,EAAuB,MAAvB;AACApB,IAAAA,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,CAAoB,oBAApB;AACH;AACJ,CAtBD","sourcesContent":["import Stripe from \"stripe\";\n// import { idText } from \"typescript\";\n\nconst stripe = new Stripe(\"sk_test_51HGDkmHBrl2UaEgapNVQtZvVU1BTJGs8MA9jKZ8w8Lh0LHs3S1Hs3Sz6heF6AWtiVZESo13DliaVYiXe0k2oRxZm00JfFHS1nq\");\n\nexport default async (req, res) => {\n    if (req.method === \"POST\") {\n        try {\n            const { id, amount } = req.body;\n\n            const paymentIntent = await stripe.paymentIntents.create({\n                amount,\n                currency: \"usd\",\n                description: \"Arepa Lover Stickers\",\n                payment_method: id,\n                metadata: {integration_check: 'accept_a_payment'},\n            });\n            res.status(200).send(paymentIntent.client_secret);\n        }\n        catch (err) {\n            res.status(500).json({ statusCode: 500, message: err.message});\n        }\n    } \n    else {\n        res.setHeader(\"Allow\", \"POST\");\n        res.status(405).end(\"Method Not Allowed\");\n    }\n};\n"]},"metadata":{},"sourceType":"module"}