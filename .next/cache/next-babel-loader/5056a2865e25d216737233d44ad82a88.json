{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 40px;\\n  display: flex;\\n  align-items: center;\\n  background-color: #fff;\\n\\n  & .StripeElement {\\n    width: 100%;\\n    padding: 15px;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nimport styled from \"@emotion/styled\";\nimport Break from \"./Break\";\nimport BillingDetailsFields from \"./BillingDetailsFields\";\nimport SubmitButton from \"./SubmitButton\";\nimport CheckoutError from \"./CheckoutError\";\nvar CardElementContainer = styled.div(_templateObject());\n_c = CardElementContainer;\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var onSuccessfulCheckout = _ref.onSuccessfulCheckout;\n\n  var _useState = useState(false),\n      isProcessing = _useState[0],\n      setProcessingTo = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutError = _useState2[0],\n      setCheckoutError = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleCardDetailsChange = function handleCardDetailsChange(ev) {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ev) {\n      var billingDetails, cardElement, _yield$axios$post, ClientSecret, paymentMethodReq, _yield$stripe$confirm, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              ev.preventDefault();\n              billingDetails = {\n                name: ev.target.name.value,\n                email: ev.target.email.value,\n                address: {\n                  city: ev.target.city.value,\n                  line1: ev.target.address.value,\n                  state: ev.target.state.value,\n                  postal_code: ev.target.zip.value\n                }\n              };\n              setProcessingTo(true);\n              cardElement = elements.getElement(CardElement);\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post(\"/api/paymentintent\", {\n                amount: 250\n              });\n\n            case 7:\n              _yield$axios$post = _context.sent;\n              ClientSecret = _yield$axios$post.data;\n              _context.next = 11;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: cardElement,\n                billing_details: billingDetails\n              });\n\n            case 11:\n              paymentMethodReq = _context.sent;\n\n              if (!paymentMethodReq.error) {\n                _context.next = 16;\n                break;\n              }\n\n              setCheckoutError(paymentMethodReq.error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 16:\n              _context.next = 18;\n              return stripe.confirmCardPayment(ClientSecret, {\n                payment_method: paymentMethodReq.paymentMethod.id\n              });\n\n            case 18:\n              _yield$stripe$confirm = _context.sent;\n              error = _yield$stripe$confirm.error;\n              console.log(\"Succeeded:\", onSuccessfulCheckout, paymentMethodReq.paymentMethod.id);\n\n              if (!error) {\n                _context.next = 25;\n                break;\n              }\n\n              setCheckoutError(error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 25:\n              onSuccessfulCheckout();\n              _context.next = 31;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](4);\n              setCheckoutError(_context.t0.message);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 28]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var iframeStyles = {\n    base: {\n      fontSize: \"16px\",\n      color: \"#2e3631\",\n      \"::placeholder\": {\n        color: \"#cae3d3\"\n      }\n    },\n    invalid: {\n      iconColor: \"#f53390\",\n      color: \"#f53390\"\n    },\n    complete: {\n      iconColor: \"#2e3631\"\n    }\n  };\n  var CardElementOptions = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 3\n    }\n  }, __jsx(Break, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(BillingDetailsFields, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }), __jsx(CardElementContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(CardElement, {\n    options: CardElementOptions,\n    onChange: handleCardDetailsChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))), checkoutError && __jsx(CheckoutError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }, checkoutError), __jsx(Break, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(SubmitButton, {\n    disabled: isProcessing || !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, isProcessing ? \"Processing...\" : \"Place Order\")));\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c2 = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardElementContainer\");\n$RefreshReg$(_c2, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx"],"names":["React","useState","CardElement","useStripe","useElements","axios","styled","Break","BillingDetailsFields","SubmitButton","CheckoutError","CardElementContainer","div","CheckoutForm","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","ev","error","message","handleSubmit","preventDefault","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","cardElement","getElement","post","amount","ClientSecret","data","createPaymentMethod","type","card","billing_details","paymentMethodReq","confirmCardPayment","payment_method","paymentMethod","id","console","log","iframeStyles","base","fontSize","color","invalid","iconColor","complete","CardElementOptions","iconStyle","style","hidePostalCode"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nimport styled from \"@emotion/styled\";\n\nimport Break from \"./Break\";\nimport BillingDetailsFields from \"./BillingDetailsFields\";\nimport SubmitButton from \"./SubmitButton\";\nimport CheckoutError from \"./CheckoutError\";\n\n\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n  background-color: #fff;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutForm = ({ onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  \n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n\n    const billingDetails = {\n      name: ev.target.name.value,\n      email: ev.target.email.value,\n      address: {\n        city: ev.target.city.value,\n        line1: ev.target.address.value,\n        state: ev.target.state.value,\n        postal_code: ev.target.zip.value\n      }\n    };\n\n    setProcessingTo(true);\n \n    const cardElement = elements.getElement(CardElement);\n\n    try {\n    const { data: ClientSecret } = await axios.post(\"/api/paymentintent\", {\n      amount: 250\n    });\n  \n    const paymentMethodReq = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n      billing_details: billingDetails\n    });\n\n    if (paymentMethodReq.error) {\n      setCheckoutError(paymentMethodReq.error.message);\n      setProcessingTo(false);\n      return;\n    }\n\n    const {error} = await stripe.confirmCardPayment(ClientSecret, {\n      payment_method: paymentMethodReq.paymentMethod.id\n    });\n\n    console.log(\"Succeeded:\", onSuccessfulCheckout, paymentMethodReq.paymentMethod.id);\n\n\n    if(error){\n      setCheckoutError(error.message);\n      setProcessingTo(false);\n      return;\n    }\n\n    onSuccessfulCheckout();\n  } catch (err) {\n    setCheckoutError(err.message);\n  }\n};\n\nconst iframeStyles = {\n  base: {\n    fontSize: \"16px\",\n    color: \"#2e3631\", \n    \"::placeholder\": {\n    color: \"#cae3d3\"\n    }\n  },\n  invalid: {\n    iconColor: \"#f53390\",\n    color: \"#f53390\"\n  },\n  complete: {\n    iconColor: \"#2e3631\",\n  }\n};\n  \nconst CardElementOptions = {\n  iconStyle: \"solid\",  \n  style: iframeStyles,\n  hidePostalCode: true\n};\n  \nreturn (\n  <form onSubmit={handleSubmit}>\n    <Break>\n      <BillingDetailsFields />\n        <CardElementContainer>\n          <CardElement \n          options={CardElementOptions}\n          onChange={handleCardDetailsChange}\n          />\n        </CardElementContainer>\n        </Break>\n        {checkoutError && <CheckoutError>{checkoutError}</CheckoutError>}\n        <Break>\n          <SubmitButton disabled={isProcessing || !stripe}>\n            {isProcessing ? \"Processing...\" : `Place Order`}\n          </SubmitButton>\n        </Break>\n      </form>\n    );\n};\n  \nexport default CheckoutForm;\n  "]},"metadata":{},"sourceType":"module"}