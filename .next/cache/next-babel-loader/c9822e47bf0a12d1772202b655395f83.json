{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nimport SubmitButton from \"./SubmitButton\";\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var onSuccessfulCheckout = _ref.onSuccessfulCheckout;\n\n  var _useState = useState(false),\n      isProcessing = _useState[0],\n      setProcessingTo = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutError = _useState2[0],\n      setCheckoutError = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleCardDetailsChange = function handleCardDetailsChange(event) {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var cardElement, _yield$stripe$createP, error, paymentMethod, id, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setProcessingTo(true);\n              cardElement = elements.getElement(CardElement);\n              _context.next = 7;\n              return stripe.createPaymentMethod({\n                type: 'card',\n                card: cardElement\n              });\n\n            case 7:\n              _yield$stripe$createP = _context.sent;\n              error = _yield$stripe$createP.error;\n              paymentMethod = _yield$stripe$createP.paymentMethod;\n\n              if (error) {\n                _context.next = 24;\n                break;\n              }\n\n              id = paymentMethod.id;\n              console.log('[PaymentMethod]', paymentMethod);\n              _context.prev = 13;\n              _context.next = 16;\n              return axios.post(\"./api/paymentintent\", {\n                id: id,\n                amount: 250\n              });\n\n            case 16:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n              console.log(data);\n              _context.next = 24;\n              break;\n\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](13);\n              console.log(_context.t0);\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[13, 21]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(CardElement, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx"],"names":["React","useState","CardElement","useStripe","useElements","axios","SubmitButton","CheckoutForm","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","event","error","message","handleSubmit","preventDefault","cardElement","getElement","createPaymentMethod","type","card","paymentMethod","id","console","log","post","amount","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA8B;AAAA;;AAAA,MAA3BC,oBAA2B,QAA3BA,oBAA2B;;AAAA,kBACTP,QAAQ,CAAC,KAAD,CADC;AAAA,MAC1CQ,YAD0C;AAAA,MAC5BC,eAD4B;;AAAA,mBAEPT,QAAQ,EAFD;AAAA,MAE1CU,aAF0C;AAAA,MAE3BC,gBAF2B;;AAIjD,MAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,MAAMW,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,MAAMW,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,KAAD,EAAW;AACzCA,IAAAA,KAAK,CAACC,KAAN,GAAcL,gBAAgB,CAACI,KAAK,CAACC,KAAN,CAAYC,OAAb,CAA9B,GAAsDN,gBAAgB,EAAtE;AACD,GAFD;;AAIA,MAAMO,YAAY;AAAA,yEAAG,iBAAOH,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,KAAK,CAACI,cAAN;;AADmB,oBAGf,CAACP,MAAD,IAAW,CAACC,QAHG;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOnBJ,cAAAA,eAAe,CAAC,IAAD,CAAf;AAEMW,cAAAA,WATa,GASCP,QAAQ,CAACQ,UAAT,CAAoBpB,WAApB,CATD;AAAA;AAAA,qBAakBW,MAAM,CAACU,mBAAP,CAA2B;AAC9DC,gBAAAA,IAAI,EAAE,MADwD;AAE9DC,gBAAAA,IAAI,EAAEJ;AAFwD,eAA3B,CAblB;;AAAA;AAAA;AAaZJ,cAAAA,KAbY,yBAaZA,KAbY;AAaLS,cAAAA,aAbK,yBAaLA,aAbK;;AAAA,kBAkBdT,KAlBc;AAAA;AAAA;AAAA;;AAmBPU,cAAAA,EAnBO,GAmBAD,aAnBA,CAmBPC,EAnBO;AAoBfC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,aAA/B;AApBe;AAAA;AAAA,qBAuBUrB,KAAK,CAACyB,IAAN,CAAW,qBAAX,EAAkC;AAACH,gBAAAA,EAAE,EAAFA,EAAD;AAAKI,gBAAAA,MAAM,EAAE;AAAb,eAAlC,CAvBV;;AAAA;AAAA;AAuBJC,cAAAA,IAvBI,qBAuBJA,IAvBI;AAwBXJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AAxBW;AAAA;;AAAA;AAAA;AAAA;AA0BfJ,cAAAA,OAAO,CAACC,GAAR;;AA1Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZV,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAgCA,SACE;AAAM,IAAA,QAAQ,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACN,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAQA,CAnDF;;GAAMN,Y;UAIWJ,S,EACEC,W;;;KALbG,Y;AAoDL,eAAeA,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport axios from \"axios\";\nimport SubmitButton from \"./SubmitButton\";\n\n\nconst CheckoutForm = ({ onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  \n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = (event) => {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setProcessingTo(true);\n  \n    const cardElement = elements.getElement(CardElement);\n  \n  \n   \n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n  \n    if (!error) {\n        const { id } = paymentMethod;\n        console.log('[PaymentMethod]', paymentMethod);\n  \n        try {\n            const {data} = await axios.post(\"./api/paymentintent\", {id, amount: 250})\n            console.log(data);\n        } catch (error) {\n        console.log(error);\n        }\n    }\n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n        <CardElement />\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n };\n export default CheckoutForm;"]},"metadata":{},"sourceType":"module"}