{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\n\nvar CheckoutForm = function CheckoutForm(_ref) {\n  _s();\n\n  var onSuccessfulCheckout = _ref.onSuccessfulCheckout;\n\n  var _useState = useState(false),\n      isProcessing = _useState[0],\n      setProcessingTo = _useState[1];\n\n  var _useState2 = useState(),\n      checkoutError = _useState2[0],\n      setCheckoutError = _useState2[1];\n\n  var stripe = useStripe();\n  var elements = useElements();\n\n  var handleCardDetailsChange = function handleCardDetailsChange(event) {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var cardElement, _yield$axios$post, clientSecret, paymentMethodReq, _yield$stripe$confirm, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (!(!stripe || !elements)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              setProcessingTo(true);\n              cardElement = elements.getElement(CardElement);\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.post(\"./api/paymentintent\", {\n                id: id,\n                amount: 250\n              });\n\n            case 8:\n              _yield$axios$post = _context.sent;\n              clientSecret = _yield$axios$post.data;\n              _context.next = 12;\n              return stripe.createPaymentMethod({\n                type: \"card\",\n                card: cardElement\n              });\n\n            case 12:\n              paymentMethodReq = _context.sent;\n\n              if (!paymentMethodReq.error) {\n                _context.next = 17;\n                break;\n              }\n\n              setCheckoutError(paymentMethodReq.error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 17:\n              _context.next = 19;\n              return stripe.confirmCardPayment(clientSecret, {\n                payment_method: paymentMethodReq.paymentMethod.id\n              });\n\n            case 19:\n              _yield$stripe$confirm = _context.sent;\n              error = _yield$stripe$confirm.error;\n\n              if (!error) {\n                _context.next = 25;\n                break;\n              }\n\n              setCheckoutError(error.message);\n              setProcessingTo(false);\n              return _context.abrupt(\"return\");\n\n            case 25:\n              onSuccessfulCheckout();\n              _context.next = 31;\n              break;\n\n            case 28:\n              _context.prev = 28;\n              _context.t0 = _context[\"catch\"](5);\n              setCheckoutError(_context.t0.message);\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 28]]);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var iframeStyles = {\n    base: {\n      color: \"#fff\",\n      fontSize: \"16px\",\n      iconColor: \"#fff\",\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#FFC7EE\",\n      color: \"#FFC7EE\"\n    },\n    complete: {\n      iconColor: \"#cbf4c9\"\n    }\n  };\n  var cardElementOpts = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n  return __jsx(\"form\", {\n    onSubmit: handleFormSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, __jsx(CardElement, {\n    options: cardElementOpts,\n    onChange: handleCardDetailsChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), checkoutError && __jsx(CheckoutError, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, checkoutError), __jsx(SubmitButton, {\n    disabled: isProcessing || !stripe,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, isProcessing ? \"Processing...\" : \"Pay $\".concat(price)));\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx"],"names":["React","useState","CardElement","useStripe","useElements","axios","CheckoutForm","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","event","error","message","handleSubmit","preventDefault","cardElement","getElement","post","id","amount","clientSecret","data","createPaymentMethod","type","card","paymentMethodReq","confirmCardPayment","payment_method","paymentMethod","iframeStyles","base","color","fontSize","iconColor","invalid","complete","cardElementOpts","iconStyle","style","hidePostalCode","handleFormSubmit","price"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport axios from \"axios\";\n\nconst CheckoutForm = ({ onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  \n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = (event) => {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    setProcessingTo(true);\n    \n    const cardElement = elements.getElement(CardElement);\n\n    try {\n      const {data: clientSecret} = await axios.post(\"./api/paymentintent\", {id, amount: 250});\n      \n      const paymentMethodReq = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: cardElement,\n      });\n\n      if (paymentMethodReq.error) {\n        setCheckoutError(paymentMethodReq.error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      const { error } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethodReq.paymentMethod.id\n      });\n\n      if (error) {\n        setCheckoutError(error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      onSuccessfulCheckout();\n    } catch (err) {\n      setCheckoutError(err.message);\n    }\n  };\n\n  const iframeStyles = {\n    base: {\n      color: \"#fff\",\n      fontSize: \"16px\",\n      iconColor: \"#fff\",\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#FFC7EE\",\n      color: \"#FFC7EE\"\n    },\n    complete: {\n      iconColor: \"#cbf4c9\"\n    }\n  };\n\n  const cardElementOpts = {\n    iconStyle: \"solid\",\n    style: iframeStyles,\n    hidePostalCode: true\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n          <CardElement\n            options={cardElementOpts}\n            onChange={handleCardDetailsChange}\n          />\n      {checkoutError && <CheckoutError>{checkoutError}</CheckoutError>}\n        <SubmitButton disabled={isProcessing || !stripe}>\n          {isProcessing ? \"Processing...\" : `Pay $${price}`}\n        </SubmitButton>\n    </form>\n  );\n};\n      \nexport default CheckoutForm;"]},"metadata":{},"sourceType":"module"}