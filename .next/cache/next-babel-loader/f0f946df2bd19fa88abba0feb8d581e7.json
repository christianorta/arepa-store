{"ast":null,"code":"var _jsxFileName = \"/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport axios from \"axios\";\n\nconst CheckoutForm = ({\n  onSuccessfulCheckout\n}) => {\n  const {\n    0: isProcessing,\n    1: setProcessingTo\n  } = useState(false);\n  const {\n    0: checkoutError,\n    1: setCheckoutError\n  } = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = event => {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    } //    setProcessingTo(true);\n\n\n    const cardElement = elements.getElement(CardElement);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n      console.log('[PaymentMethod]', paymentMethod);\n\n      try {\n        const {\n          data\n        } = await axios.post(\"./api/paymentintent\", {\n          id,\n          amount: 250\n        });\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, __jsx(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Pay\"));\n};\n\nexport default CheckoutForm;","map":{"version":3,"sources":["/Users/christianorta/MyApps/arepa-store/components/CheckoutForm.jsx"],"names":["React","useState","CardElement","useStripe","useElements","axios","CheckoutForm","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","event","error","message","handleSubmit","preventDefault","cardElement","getElement","paymentMethod","createPaymentMethod","type","card","id","console","log","data","post","amount"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,WAAR,EAAqBC,SAArB,EAAgCC,WAAhC,QAAkD,yBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA8B;AACjD,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAACS,aAAD;AAAA,OAAgBC;AAAhB,MAAoCV,QAAQ,EAAlD;AAEA,QAAMW,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,uBAAuB,GAAIC,KAAD,IAAW;AACzCA,IAAAA,KAAK,CAACC,KAAN,GAAcL,gBAAgB,CAACI,KAAK,CAACC,KAAN,CAAYC,OAAb,CAA9B,GAAsDN,gBAAgB,EAAtE;AACD,GAFD;;AAIA,QAAMO,YAAY,GAAG,MAAOH,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACI,cAAN;;AAEA,QAAI,CAACP,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD,KALmC,CAOxC;;;AAEI,UAAMO,WAAW,GAAGP,QAAQ,CAACQ,UAAT,CAAoBnB,WAApB,CAApB;AAGA,UAAM;AAACc,MAAAA,KAAD;AAAQM,MAAAA;AAAR,QAAyB,MAAMV,MAAM,CAACW,mBAAP,CAA2B;AAC9DC,MAAAA,IAAI,EAAE,MADwD;AAE9DC,MAAAA,IAAI,EAAEL;AAFwD,KAA3B,CAArC;;AAKA,QAAI,CAACJ,KAAL,EAAY;AACR,YAAM;AAAEU,QAAAA;AAAF,UAASJ,aAAf;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,aAA/B;;AAEA,UAAI;AACA,cAAM;AAACO,UAAAA;AAAD,YAAS,MAAMxB,KAAK,CAACyB,IAAN,CAAW,qBAAX,EAAkC;AAACJ,UAAAA,EAAD;AAAKK,UAAAA,MAAM,EAAE;AAAb,SAAlC,CAArB;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACH,OAHD,CAGE,OAAOb,KAAP,EAAc;AAChBW,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACC;AACJ;AACF,GA5BD;;AA+BA,SACE;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAE,CAACN,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF;AAQA,CAlDF;;AAmDC,eAAeN,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport {CardElement, useStripe, useElements} from '@stripe/react-stripe-js';\nimport axios from \"axios\";\n\n\nconst CheckoutForm = ({ onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  \n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = (event) => {\n    event.error ? setCheckoutError(event.error.message) : setCheckoutError();\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n//    setProcessingTo(true);\n  \n    const cardElement = elements.getElement(CardElement);\n  \n   \n    const {error, paymentMethod} = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n    });\n  \n    if (!error) {\n        const { id } = paymentMethod;\n        console.log('[PaymentMethod]', paymentMethod);\n  \n        try {\n            const {data} = await axios.post(\"./api/paymentintent\", {id, amount: 250})\n            console.log(data);\n        } catch (error) {\n        console.log(error);\n        }\n    }\n  };\n  \n\n  return (\n    <form onSubmit={handleSubmit}>\n        <CardElement />\n      <button type=\"submit\" disabled={!stripe}>\n        Pay\n      </button>\n    </form>\n  );\n };\n export default CheckoutForm;"]},"metadata":{},"sourceType":"module"}